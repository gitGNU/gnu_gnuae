// 
//   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008,
//              2009 Free Software Foundation, Inc.
// 
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

#ifndef __CHARGERS_H__
#define __CHARGERS_H__

// This is generated by autoconf
#include "config.h"

typedef enum { NONE, YES, NO, OPTIONAL, DEFAULT } feature_e;

typedef struct
{
  char *name;
  char *manufacturer;
  double price;
  int amperage;
  int volts_in;
  int volts_out;
  double efficiency;
  double openmax;
  feature_e lcd;
  feature_e MPPT;
  feature_e PWM;
  feature_e tempsensor;
  feature_e remote;
} charger_t;

#ifdef __cplusplus

#include <map>

#include "DataType.h"
#include "Database.h"

namespace gnuae {

class Chargers : public DataTypeMethods<charger_t> {
public:
    Chargers(void);
    ~Chargers(void);

    int readCSV(std::string);
    int readSQL(Database &db);
    
    void dump();
    void dump(charger_t *cgr);
private:
    //      std::map<std::string, chargers_t> batteries;
};

} // end of gnuae namespace

extern "C" {
#else
// C API goes here
  extern charger_t chargers[];
#endif

#ifdef __cplusplus
}
#endif
  
// __CHARGERS_H__
#endif

// local Variables:
// mode: C++
// indent-tabs-mode: t
// End:
