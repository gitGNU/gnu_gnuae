// 
//   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008,
//              2009, 2010 Free Software Foundation, Inc.
// 
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

// Power Loss = Voltage drop as a percentage x load in amps
//

// This is generated by autoconf
#include "config.h"

#include <iostream>
#include <map>
#include <vector>
#include <string>
#include <iterator>
#include <cmath>

#include "Loads.h"
#include "DataType.h"

using namespace std;

namespace gnuae {

#if 0
std::vector<std::string> *names(void)
{
  // std::map<std::string, datatype *>::const_iterator it;
  std::map<std::string, void *>::const_iterator it;
  std::vector<std::string> *entrynames;
  datatype *entry;
  entrynames = new std::vector<std::string>;  
  
  if (_data.size() == 0) {
    std::cerr << "No Load data in memory!" << std::endl;
    return entrynames;
  }
      
  for (it = _data.begin(); it != _data.end(); it++) {
    entry = it->second;
    entrynames->push_back(entry->name);
  }
  return entrynames;
}
#endif

} // end of gnuae namespace

// local Variables:
// mode: C++
// indent-tabs-mode: t
// End:
