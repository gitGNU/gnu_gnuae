GnuAE is a program, for designing alternate energy system.

I've restarted hacking on the GnuAE project after a few years absence,
so it now has a slightly different focus. Rather than go through the
pain updating the old Gtk 1.2 based GUI, I decided that turning GnuAE
into a PHP extension, so it could be used via any web browser was a
good idea. Now most of the internal functions are accessible through
PHP, and I'm slowly creating a new UI in php. Other big changes were
upgrading to the GPLv3, switching to Git, and adding SQL database
support, instead of the csv files.


Getting the database setup:

Currently the use of MySQL is pretty much hardcoded, although I'd love
to add sqlite support in the future. There are two files in the data
directory that can be used to setup the initial database, and another
one used by the test suite. Those files are:

    data/gnuae.sql
    data/gnuaetest.sql

Then create the databases, which are initially empty. The data files will
populate this database with the data from the file.

mysqladmin -uroot -p###### create gnuae
mysql -uroot -p###### gnuae < gnuae.sql 

mysqladmin -uroot -p###### create gnuaetest
mysql -uroot -p###### gnuaetest < gnuaetest.sql 

Then once created, you have to grant access to a user for the table, and then
flush the priviledges to make it take effect.

GRANT ALL PRIVILEGES ON gnuae.* TO gnuae@localhost IDENTIFIED BY 'gnuae';
GRANT ALL PRIVILEGES ON gnuaetest.* TO gnuae@localhost IDENTIFIED BY 'gnuae';
flush privileges;


-----------------------------------
Design Notes:

The basic idea is there are multiple projects, eash referenced by it's
ID field. The projects table keeps track of project specific data like
the GPS coordinates, descriptions, etc....

There is also a table of profiles. A profile is the list of load items
chosen by the user. There are multiple projects in the profiles table,
indexed by the project ID it belongs to.

As items are added to the list, the total power requirements gets
updated. These totals are then used to calculate the required amount
of batteries, photovoltaic, or wind generators to met that demand.

Once the required power system components are selected, then the
prefered wire gauges of the various subsystems, based on the length of
wire, is calculated.

There is a utility page included called the NEC Code Calculator. This
allows the user to do the lower level calculations for when you know
the load data, and just want to check on wiring options. You can also
do conduit fill calculations on this same page.